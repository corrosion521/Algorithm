# 시작,끝은 1의 이동속도로만 이동가능
# 작동을 한 번 할 떄마다 이동속도 범위가 1씩올라감(초기값 -1 0 1)
# 이동속도 전환시 1의 차이로만 변경가능
# 최소의 작동시간으로가야 됨. 즉 범위 내 최고속도로 이동해줘야함(단, 이동속도 전환 고려)
'''
거리 ,이동루트, 총 카운트
1 1 1
2 11 2
3 111 3
4 121 3
5 1211 4
6 1221 5
7 12211 5..
=> 규칙 왕복거리떄문에 각 이동속도가 2번씩 사용됨.
   단 예외적으로 하나 정도는 남거나 부족ex) 12211

'''

#입력 :t,x,y
t = int(input())

for i in range(t):
    x,y = map(int,input().split())

# 계산: 거리, 이동루트,카운트 사용하여 총 카운트 도출
    distance = y-x
    count = 0 # 총 카운트
    full = 1 # 이동가능 최대속도, 디폴트 1

    while distance>0: # 거리가 0보다 작아지면 break, 이(<0)를 이용해 하나의 불규칙적인 이동루트 상쇄가능
        count+=1 # 사용시 1증가
        distance-=full #풀파워로 이동
        if count%2==0: #왕복 염두해서 2의 배수시 최고속도 1증가
            full+=1
    # 출력: 한 케이스의 count 출력
    print(count)


